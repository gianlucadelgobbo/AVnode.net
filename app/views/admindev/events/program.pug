extends ../layout_admin
block content
  include ./_filters
  table.table.program
    //thead
      tr
        th
        each room,i in data.rooms
          th
            h5=room
    tbody
      tr
        each day in data.programmebydayvenue
          - cols = Object.keys(day.rooms).length
        td(style="width:calc(100vw/"+(cols+3)+")")
          h2=global.__("TO BE SCHEDULED")
          div(style="max-height: calc(100vh - 100px);overflow-y: scroll;")
            form(id="form"+conta)
              ul.list-group.connectedSortable(id="sortable0")
                each program, i in data.program
                  if !program.schedule || !program.schedule.length
                    if (get.performance_category && program.performance.type._id.toString() == get.performance_category) || (!get.performance_category || get.performance_category == "0")
                      li.list-group-item(style="overflow: hidden;", class=(program.performance.duration != parseFloat(program.performance.duration) ? "disabled" : ""))
                        .index.badge.disabled=(i+1)
                        .clearfix
                          .pull-left
                            .timing.small
                          .pull-right
                            .small(class=(program.performance.duration == parseFloat(program.performance.duration) ? "" : "badge badge-danger"))=program.performance.duration+" min."
                        .title
                          b!=program.performance.title
                        .type.small=program.performance.type.name
                        .authors=program.performance.users.map(user => {return user.stagename}).join(", ")
                        .pull-left
                          a.duplicate(href="#")
                            i.fa.fa-clone
                        .pull-right
                          .availability.text-right
                            - var daydayA = []
                            each subscription in program.subscriptions
                              each day, i in data.days
                                - if (daydayA[i]!=-1) daydayA[i] = subscription.days.map(item => {return item.getTime()}).indexOf(day)
                            each day, i in daydayA
                              span.ml-1.badge.badge-pill(class=day==-1 ? "badge-danger" : "badge-success")
                                !=new Date(data.days[i]).getDate()
                          input(type="hidden", name="program[]", value=JSON.stringify(program))
        td(style="padding:0;border:none;")
          div(style="max-height: calc(100vh - 40px);overflow-y: scroll;")
            table(style='width: 100%')
              - var conta = 1
              each day in data.programmebydayvenue
                tr
                  td(colspan=Object.keys(day.rooms).length)
                    h2=day.date
                tr
                  each room,i in day.rooms
                    if (get['bookings.schedule.venue.room'] && room.schedule.venue.room == get['bookings.schedule.venue.room']) || (!get['bookings.schedule.venue.room'] || get['bookings.schedule.venue.room'] == "0")
                      td(style="width:calc(100vw/"+(cols+3)+")")
                        b=room.schedule.venue.room
                        div(style="width:calc(100vw/"+(cols+3)+");overflow: hidden;")
                          form(id="form"+conta)
                            input(type="hidden", name="room", value=JSON.stringify(room.schedule))
                            ul.list-group.connectedSortable(id="sortable"+conta)
                              - conta++
                              if room.program
                                each program,ii in room.program
                                  li.list-group-item
                                    .index.badge.disabled=(ii+1)
                                    .clearfix
                                      .pull-left
                                        .timing.small=program.schedule.starttimeTime+" - "+program.schedule.endtimeTime
                                      .pull-right
                                        .small=program.performance.duration+" min."
                                    .title
                                      b!=program.performance.title
                                    .type.small=program.performance.type.name
                                    .authors=program.performance.users.map(user => {return user.stagename}).join(", ")
                                    .pull-left
                                      a.duplicate(href="#")
                                        i.fa.fa-clone
                                    .pull-right
                                      .availability.text-right
                                        - var daydayA = []
                                        each subscription in program.subscriptions
                                          each day, i in data.days
                                            - if (daydayA[i]!=-1) daydayA[i] = subscription.days.map(item => {return new Date(item).getTime()}).indexOf(day)
                                        each day, i in daydayA
                                          span.ml-1.badge.badge-pill(class=day==-1 ? "badge-danger" : "badge-success")
                                            !=new Date(data.days[i]).getDate()
                                      input(type="hidden", name="program[]", value=JSON.stringify(program))
